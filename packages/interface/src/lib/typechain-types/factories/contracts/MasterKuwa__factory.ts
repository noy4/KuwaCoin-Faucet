/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  type Overrides,
} from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type {
  MasterKuwa,
  MasterKuwaInterface,
} from '../../contracts/MasterKuwa'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_ownerAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'DRIP_AMOUNT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'givenCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
    ],
    name: 'requestTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
]

const _bytecode =
  '0x6080604052600060035534801561001557600080fd5b50604051610d76380380610d7683398181016040528101906100379190610122565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610162565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ef826100c4565b9050919050565b6100ff816100e4565b811461010a57600080fd5b50565b60008151905061011c816100f6565b92915050565b60008060408385031215610139576101386100bf565b5b60006101478582860161010d565b92505060206101588582860161010d565b9150509250929050565b610c05806101716000396000f3fe60806040526004361061003f5760003560e01c80630a6e138814610044578063580f39041461006f5780638da5cb5b1461008b578063e98890a7146100b6575b600080fd5b34801561005057600080fd5b506100596100e1565b60405161006691906105a3565b60405180910390f35b61008960048036038101906100849190610621565b6100e7565b005b34801561009757600080fd5b506100a061055e565b6040516100ad919061065d565b60405180910390f35b3480156100c257600080fd5b506100cb610584565b6040516100d891906105a3565b60405180910390f35b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017691906106b1565b600a6101829190610840565b61138861018f919061088b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e8919061065d565b602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022991906108f9565b11610269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610260906109a9565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90610a3b565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a91906106b1565b600a6104269190610840565b611388610433919061088b565b6040518363ffffffff1660e01b8152600401610450929190610a5b565b6020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610abc565b506001600360008282546104a79190610ae9565b9250508190555060008173ffffffffffffffffffffffffffffffffffffffff16346040516104d490610b4e565b60006040518083038185875af1925050503d8060008114610511576040519150601f19603f3d011682016040523d82523d6000602084013e610516565b606091505b505090508061055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190610baf565b60405180910390fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61138881565b6000819050919050565b61059d8161058a565b82525050565b60006020820190506105b86000830184610594565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ee826105c3565b9050919050565b6105fe816105e3565b811461060957600080fd5b50565b60008135905061061b816105f5565b92915050565b600060208284031215610637576106366105be565b5b60006106458482850161060c565b91505092915050565b610657816105e3565b82525050565b6000602082019050610672600083018461064e565b92915050565b600060ff82169050919050565b61068e81610678565b811461069957600080fd5b50565b6000815190506106ab81610685565b92915050565b6000602082840312156106c7576106c66105be565b5b60006106d58482850161069c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610764578086048111156107405761073f6106de565b5b600185161561074f5780820291505b808102905061075d8561070d565b9450610724565b94509492505050565b60008261077d5760019050610839565b8161078b5760009050610839565b81600181146107a157600281146107ab576107da565b6001915050610839565b60ff8411156107bd576107bc6106de565b5b8360020a9150848211156107d4576107d36106de565b5b50610839565b5060208310610133831016604e8410600b841016171561080f5782820a90508381111561080a576108096106de565b5b610839565b61081c848484600161071a565b92509050818404811115610833576108326106de565b5b81810290505b9392505050565b600061084b8261058a565b915061085683610678565b92506108837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461076d565b905092915050565b60006108968261058a565b91506108a18361058a565b92508282026108af8161058a565b915082820484148315176108c6576108c56106de565b5b5092915050565b6108d68161058a565b81146108e157600080fd5b50565b6000815190506108f3816108cd565b92915050565b60006020828403121561090f5761090e6105be565b5b600061091d848285016108e4565b91505092915050565b600082825260208201905092915050565b7f4d6173746572204b7577613a204920646f6e27742068617665204b757761204360008201527f6f696e20616e79206d6f72652e00000000000000000000000000000000000000602082015250565b6000610993602d83610926565b915061099e82610937565b604082019050919050565b600060208201905081810360008301526109c281610986565b9050919050565b7f4d6173746572204b7577613a20596f752063616e206f6e6c7920676574204b7560008201527f776120436f696e2066726f6d206d65206f6e63652e0000000000000000000000602082015250565b6000610a25603583610926565b9150610a30826109c9565b604082019050919050565b60006020820190508181036000830152610a5481610a18565b9050919050565b6000604082019050610a70600083018561064e565b610a7d6020830184610594565b9392505050565b60008115159050919050565b610a9981610a84565b8114610aa457600080fd5b50565b600081519050610ab681610a90565b92915050565b600060208284031215610ad257610ad16105be565b5b6000610ae084828501610aa7565b91505092915050565b6000610af48261058a565b9150610aff8361058a565b9250828201905080821115610b1757610b166106de565b5b92915050565b600081905092915050565b50565b6000610b38600083610b1d565b9150610b4382610b28565b600082019050919050565b6000610b5982610b2b565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000610b99601483610926565b9150610ba482610b63565b602082019050919050565b60006020820190508181036000830152610bc881610b8c565b905091905056fea26469706673582212206b3bc81e872aabfce3a3b21be593a9b787ea3f6af473e1496290a3826afcda7164736f6c63430008110033'

type MasterKuwaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: MasterKuwaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class MasterKuwa__factory extends ContractFactory {
  constructor(...args: MasterKuwaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _tokenAddress: PromiseOrValue<string>,
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterKuwa> {
    return super.deploy(
      _tokenAddress,
      _ownerAddress,
      overrides || {}
    ) as Promise<MasterKuwa>
  }
  override getDeployTransaction(
    _tokenAddress: PromiseOrValue<string>,
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddress,
      _ownerAddress,
      overrides || {}
    )
  }
  override attach(address: string): MasterKuwa {
    return super.attach(address) as MasterKuwa
  }
  override connect(signer: Signer): MasterKuwa__factory {
    return super.connect(signer) as MasterKuwa__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MasterKuwaInterface {
    return new utils.Interface(_abi) as MasterKuwaInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterKuwa {
    return new Contract(address, _abi, signerOrProvider) as MasterKuwa
  }
}

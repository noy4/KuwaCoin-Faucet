/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  type Overrides,
} from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { Faucet, FaucetInterface } from '../../contracts/Faucet'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_ownerAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'DRIP_AMOUNT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
    ],
    name: 'requestTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610b7a380380610b7a8339818101604052810190610032919061011d565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b610a0e8061016c6000396000f3fe6080604052600436106100385760003560e01c8063580f3904146100445780638da5cb5b1461006d578063e98890a7146100985761003f565b3661003f57005b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610502565b6100c3565b005b34801561007957600080fd5b50610082610473565b60405161008f919061053e565b60405180910390f35b3480156100a457600080fd5b506100ad610499565b6040516100ba9190610572565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561012e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015291906105c6565b600a61015e9190610755565b61138861016b91906107a0565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101c4919061053e565b602060405180830381865afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610205919061080e565b11610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c90610898565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c99061092a565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f691906105c6565b600a6104029190610755565b61138861040f91906107a0565b6040518363ffffffff1660e01b815260040161042c92919061094a565b6020604051808303816000875af115801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f91906109ab565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61138881565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104cf826104a4565b9050919050565b6104df816104c4565b81146104ea57600080fd5b50565b6000813590506104fc816104d6565b92915050565b6000602082840312156105185761051761049f565b5b6000610526848285016104ed565b91505092915050565b610538816104c4565b82525050565b6000602082019050610553600083018461052f565b92915050565b6000819050919050565b61056c81610559565b82525050565b60006020820190506105876000830184610563565b92915050565b600060ff82169050919050565b6105a38161058d565b81146105ae57600080fd5b50565b6000815190506105c08161059a565b92915050565b6000602082840312156105dc576105db61049f565b5b60006105ea848285016105b1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561067957808604811115610655576106546105f3565b5b60018516156106645780820291505b808102905061067285610622565b9450610639565b94509492505050565b600082610692576001905061074e565b816106a0576000905061074e565b81600181146106b657600281146106c0576106ef565b600191505061074e565b60ff8411156106d2576106d16105f3565b5b8360020a9150848211156106e9576106e86105f3565b5b5061074e565b5060208310610133831016604e8410600b84101617156107245782820a90508381111561071f5761071e6105f3565b5b61074e565b610731848484600161062f565b92509050818404811115610748576107476105f3565b5b81810290505b9392505050565b600061076082610559565b915061076b8361058d565b92506107987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610682565b905092915050565b60006107ab82610559565b91506107b683610559565b92508282026107c481610559565b915082820484148315176107db576107da6105f3565b5b5092915050565b6107eb81610559565b81146107f657600080fd5b50565b600081519050610808816107e2565b92915050565b6000602082840312156108245761082361049f565b5b6000610832848285016107f9565b91505092915050565b600082825260208201905092915050565b7f4661757365744572726f723a20456d7074790000000000000000000000000000600082015250565b600061088260128361083b565b915061088d8261084c565b602082019050919050565b600060208201905081810360008301526108b181610875565b9050919050565b7f4661756365744572726f723a20596f75206861766520616c726561647920676f60008201527f74204b757761436f696e206265666f7265000000000000000000000000000000602082015250565b600061091460318361083b565b915061091f826108b8565b604082019050919050565b6000602082019050818103600083015261094381610907565b9050919050565b600060408201905061095f600083018561052f565b61096c6020830184610563565b9392505050565b60008115159050919050565b61098881610973565b811461099357600080fd5b50565b6000815190506109a58161097f565b92915050565b6000602082840312156109c1576109c061049f565b5b60006109cf84828501610996565b9150509291505056fea26469706673582212206e81a4eda54eae685edadac28a6f333d5ce560fbb31c67580499166d08dce40d64736f6c63430008110033'

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _tokenAddress: PromiseOrValue<string>,
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Faucet> {
    return super.deploy(
      _tokenAddress,
      _ownerAddress,
      overrides || {}
    ) as Promise<Faucet>
  }
  override getDeployTransaction(
    _tokenAddress: PromiseOrValue<string>,
    _ownerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddress,
      _ownerAddress,
      overrides || {}
    )
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet
  }
}
